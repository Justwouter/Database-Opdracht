<!DOCTYPE html>
<html lang="en"><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="Blank%20Page_files/bootstrap.min.css">
    <!-- Font Awesome CSS -->
    <link rel="stylesheet" href="Blank%20Page_files/all.min.css">
    <!-- Template CSS -->
    <link rel="stylesheet" href="Blank%20Page_files/styles.min.css">
    <link rel="stylesheet" href="Blank%20Page_files/custom.css">
    <title>Blank Page</title>
    <!-- https://fonts.google.com/knowledge/glossary/monospaced -->
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Roboto+Mono&display=swap');
        </style>
    <style>
        .codehilite * { color: #000; font-family: 'Roboto Mono', monospace; }
        .codehilite .hll { background-color: #ffffcc }
        .codehilite .c { color: #60a0b0; font-style: italic } /* Comment */
        .codehilite .err { border: 1px solid #FF0000 } /* Error */
        .codehilite .k { color: #007020; font-weight: bold } /* Keyword */
        .codehilite .o { color: #666666 } /* Operator */
        .codehilite .cm { color: #60a0b0; font-style: italic } /* Comment.Multiline */
        .codehilite .cp { color: #007020 } /* Comment.Preproc */
        .codehilite .c1 { color: #60a0b0; font-style: italic } /* Comment.Single */
        .codehilite .cs { color: #60a0b0; background-color: #fff0f0 } /* Comment.Special */
        .codehilite .gd { color: #A00000 } /* Generic.Deleted */
        .codehilite .ge { font-style: italic } /* Generic.Emph */
        .codehilite .gr { color: #FF0000 } /* Generic.Error */
        .codehilite .gh { color: #000080; font-weight: bold } /* Generic.Heading */
        .codehilite .gi { color: #00A000 } /* Generic.Inserted */
        .codehilite .go { color: #808080 } /* Generic.Output */
        .codehilite .gp { color: #c65d09; font-weight: bold } /* Generic.Prompt */
        .codehilite .gs { font-weight: bold } /* Generic.Strong */
        .codehilite .gu { color: #800080; font-weight: bold } /* Generic.Subheading */
        .codehilite .gt { color: #0040D0 } /* Generic.Traceback */
        .codehilite .kc { color: #007020; font-weight: bold } /* Keyword.Constant */
        .codehilite .kd { color: #007020; font-weight: bold } /* Keyword.Declaration */
        .codehilite .kn { color: #007020; font-weight: bold } /* Keyword.Namespace */
        .codehilite .kp { color: #007020 } /* Keyword.Pseudo */
        .codehilite .kr { color: #007020; font-weight: bold } /* Keyword.Reserved */
        .codehilite .kt { color: #902000 } /* Keyword.Type */
        .codehilite .m { color: #40a070 } /* Literal.Number */
        .codehilite .s { color: #4070a0 } /* Literal.String */
        .codehilite .na { color: #4070a0 } /* Name.Attribute */
        .codehilite .nb { color: #007020 } /* Name.Builtin */
        .codehilite .nc { color: #0e84b5; font-weight: bold } /* Name.Class */
        .codehilite .no { color: #60add5 } /* Name.Constant */
        .codehilite .nd { color: #555555; font-weight: bold } /* Name.Decorator */
        .codehilite .ni { color: #d55537; font-weight: bold } /* Name.Entity */
        .codehilite .ne { color: #007020 } /* Name.Exception */
        .codehilite .nf { color: #06287e } /* Name.Function */
        .codehilite .nl { color: #002070; font-weight: bold } /* Name.Label */
        .codehilite .nn { color: #0e84b5; font-weight: bold } /* Name.Namespace */
        .codehilite .nt { color: #062873; font-weight: bold } /* Name.Tag */
        .codehilite .nv { color: #bb60d5 } /* Name.Variable */
        .codehilite .ow { color: #007020; font-weight: bold } /* Operator.Word */
        .codehilite .w { color: #bbbbbb } /* Text.Whitespace */
        .codehilite .mf { color: #40a070 } /* Literal.Number.Float */
        .codehilite .mh { color: #40a070 } /* Literal.Number.Hex */
        .codehilite .mi { color: #40a070 } /* Literal.Number.Integer */
        .codehilite .mo { color: #40a070 } /* Literal.Number.Oct */
        .codehilite .sb { color: #4070a0 } /* Literal.String.Backtick */
        .codehilite .sc { color: #4070a0 } /* Literal.String.Char */
        .codehilite .sd { color: #4070a0; font-style: italic } /* Literal.String.Doc */
        .codehilite .s2 { color: #4070a0 } /* Literal.String.Double */
        .codehilite .se { color: #4070a0; font-weight: bold } /* Literal.String.Escape */
        .codehilite .sh { color: #4070a0 } /* Literal.String.Heredoc */
        .codehilite .si { color: #70a0d0; font-style: italic } /* Literal.String.Interpol */
        .codehilite .sx { color: #c65d09 } /* Literal.String.Other */
        .codehilite .sr { color: #235388 } /* Literal.String.Regex */
        .codehilite .s1 { color: #4070a0 } /* Literal.String.Single */
        .codehilite .ss { color: #517918 } /* Literal.String.Symbol */
        .codehilite .bp { color: #007020 } /* Name.Builtin.Pseudo */
        .codehilite .vc { color: #bb60d5 } /* Name.Variable.Class */
        .codehilite .vg { color: #bb60d5 } /* Name.Variable.Global */
        .codehilite .vi { color: #bb60d5 } /* Name.Variable.Instance */
        .codehilite .il { color: #40a070 } /* Literal.Number.Integer.Long */
    </style>
<script>function lti_launch( vars, target ) {
						var query = '';
						var new_tab = false;

						for(var key in vars) {
							if(query.length == 0) {
								query += '?' + key + '=' + encodeURIComponent(vars[key]);
							}
							else {
								query += '&' + key + '=' + encodeURIComponent(vars[key]);
							}
						}

						var url = '/d2l/customization/pearsonlti/15831/Launch' + query;(target == '_blank') ? window.open( url, '_blank' ) : location.replace( url );}</script><script src="Blank%20Page_files/mathjax.js" type="module"></script><script>document.addEventListener('DOMContentLoaded', function() {
					if (document.querySelector('math') || /\$\$|\\\(|\\\[|\\begin{|\\ref{|\\eqref{/.test(document.body.innerHTML)) {
						document.querySelectorAll('mspace[linebreak="newline"]').forEach(elm => {
							elm.setAttribute('style', 'display: block; height: 0.5rem;');
						});

						window.D2L.MathJax.loadMathJax({
							'outputScale': 1.3,
							'renderLatex': false
						});
					}
				});</script><script src="Blank%20Page_files/prism.js" type="module"></script><script>document.addEventListener('DOMContentLoaded', function() {
					document.querySelectorAll('.d2l-code').forEach(code => {
						window.D2L.Prism.formatCodeElement(code);
					});
				});</script><script>window.addEventListener('message', function(event) { 
					if( !event.data ) {
						return;
					}

					var params;
					try {
						params = JSON.parse( event.data );
					}
					catch {
						return;
					}
					if( !params.subject || params.subject !== 'lti.frameResize' ) {
						return;
					}

					const MAX_FRAME_HEIGHT = 10000
					if( !params.height || params.height < 1 || params.height > MAX_FRAME_HEIGHT ) {
						console.warn( 'Invalid height value received, aborting' );
						return;
					}
					var el = document.getElementsByTagName( 'iframe' );
					for ( var i=0; i < el.length; i++ ) {
						if( el[i].contentWindow === event.source ) {
							el[i].style.height = params.height + 'px';
							el[i].style.width = '100%';
							console.info( 'Setting iFrame height to ' + params.height );
							console.info( 'Setting iFrame width to 100%' );
						}
					}
				});</script><script src="Blank%20Page_files/prompt.js"></script></head>

<body>
<div class="container-fluid">
<div class="row">
<div class="col-12 offset-md-1 col-md-10 offset-lg-2 col-lg-8">
<h1 style="color: #9ea700;">üìù Opdracht</h1>
<p style="color: #000000;"><strong><span style="color: #ff575a;">Nieuw: </span></strong></p>
<ul>
<li style="color: #000000;"><strong><span style="color: #ff575a;">Is deze opdracht heel eng? Klik dan <a href="https://brightspace.hhs.nl//content/enforced/15831-H-SE-S3WPFW-21_2022_VT/Hulp.html.pdf?_&amp;d2lSessionVal=Ve5EAU0yKUoPPndyNeSc32443&amp;ou=15831" target="_blank" rel="noopener" style="color: #ff575a;" class="new-window" id="new-window0" data-original-title="opens in new window/tab" data-toggle="tooltip"><span class="lastWord">hier</span></a>&nbsp; voor een beginnetje.&nbsp;</span></strong></li>
<li style="color: #000000;"><strong><span style="color: #ff575a;">Implementeer de </span></strong><code style="white-space: pre-wrap;">DbContext</code> <strong><span style="color: #ff575a;">niet zelf! In het rood nu de packages om dat extra aan te geven.&nbsp;</span></strong></li>
<li style="color: #000000;"><strong><span style="color: #ff575a;">Het is niet erg als je de opdracht gemaakt hebt zonder de aanpassingen in het rood.&nbsp;</span></strong></li>
</ul>
<p style="color: #000000;">Implementeer het ontwerp hieronder (je mag extra methoden of klassen toevoegen, maar dat hoeft niet):</p>
<p style="color: #000000;"><img src="Blank%20Page_files/linqopdracht%20handmatige%20edit.png" alt="UML diagram" title="UML diagram" data-d2l-editor-default-img-style="true" style="max-width: 100%;"></p>
<ul>
<li>Gebruik SQL Server als DBMS en <a href="https://www.nuget.org/packages/Microsoft.EntityFrameworkCore.SqlServer/" title="deze">deze</a> NuGet package als Database Provider voor EF Core. <em>Gebruik geen lazy loading. </em><code style="white-space: pre-wrap;">Id</code>'s ontbreken nog in het diagram. Ook ontbreken 'foreign keys' <code style="white-space: pre-wrap;">Id</code>'s
 in het diagram, die bijvoorbeeld nodig zijn bij 1-op-1 relaties, om aan
 te geven aan welke kant van de relatie de foreign key komt. 
Parameterloze protected constructors, die soms nodig zijn voor EF Core, 
ontbreken ook nog in dit diagram.&nbsp;</li>
<li>De associaties vanaf <code style="white-space: pre-wrap;">DatabaseContext</code> uiten zich als <code style="white-space: pre-wrap;">DbSet</code>'s.</li>
<li>Schrijf een test voor de methode <code style="white-space: pre-wrap;">Boek</code> in <code style="white-space: pre-wrap;">DatabaseContext</code>. Let op: gebruik een 'clean context'.</li>
<li>We willen niet dat de klasse <code style="white-space: pre-wrap;">Coordinaat</code> een aparte tabel wordt, omdat we niet vaak geintereseerd zijn in de rijen van de tabel <code style="white-space: pre-wrap;">Coordinaat</code> op zichzelf. Gebruik <a href="https://docs.microsoft.com/en-us/ef/core/modeling/owned-entities" target="_blank" rel="noopener" class="new-window" id="new-window1" data-original-title="opens in new window/tab" data-toggle="tooltip"><span class="lastWord"><code style="white-space: pre-wrap;">Owned</code></span></a>&nbsp;. Hetzelfde geldt voor <code style="white-space: pre-wrap;">DateTimeBereik</code>.</li>
<li>Waarschijnlijk zal de database veel updates ontvangen over de 
locatie van gasten en de webpagina waarop ze zich bevinden, dus is er 
vanwege performance gekozen om dit gedeelte van de eigenschappen van <code style="white-space: pre-wrap;">Gast</code> te bewaren in een aparte tabel <code style="white-space: pre-wrap;">GastInfo</code>. Dit is een 1-op-1 associatie.</li>
<li>Vanwege performance willen we Table-Per-Type toepassen voor de overerving van <code style="white-space: pre-wrap;">Gebruiker</code>, lees <a href="https://docs.microsoft.com/en-us/ef/core/modeling/inheritance#table-per-type-configuration" target="_blank" rel="noopener" class="new-window" id="new-window2" data-original-title="opens in new window/tab" data-toggle="tooltip"><span class="lastWord">dit</span></a>&nbsp;.</li>
<li>Zodra een <code style="white-space: pre-wrap;">Gast</code> wordt verwijderd, bijvoorbeeld na het verwijderen van het account, moeten de bijbehorende <code style="white-space: pre-wrap;">Reservering</code>'en blijven bestaan. Gebruik <a href="https://docs.microsoft.com/en-us/ef/core/saving/cascade-delete" target="_blank" rel="noopener" class="new-window" id="new-window3" data-original-title="opens in new window/tab" data-toggle="tooltip"><span class="lastWord">deze</span></a>&nbsp; docs.</li>
</ul>
<p style="color: #000000;">Doe de volgende deelopdrachten met de methode-syntax van LINQ (dus niet de <a href="https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/concepts/linq/query-syntax-and-method-syntax-in-linq" target="_blank" rel="noopener" class="new-window" id="new-window4" data-original-title="opens in new window/tab" data-toggle="tooltip"><span class="lastWord">query-syntax</span></a>&nbsp;). De meeste deelopdrachten kan je doen zonder de <code style="white-space: pre-wrap;">IEnumerable</code> meerdere keren te doorlopen. Dat kan goed zijn voor de performance, omdat de elementen in de <code style="white-space: pre-wrap;">IEnumerable</code> uit een database moeten worden geladen. Probeer de methoden te implementeren als <a href="https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/statements-expressions-operators/expression-bodied-members" target="_blank" rel="noopener" class="new-window" id="new-window5" data-original-title="opens in new window/tab" data-toggle="tooltip">expression-bodied <span class="lastWord">members</span></a>&nbsp; (dus niet meerdere statements achter elkaar).&nbsp;</p>
<p style="color: #000000;">Implementeer <code style="white-space: pre-wrap;">DemografischRapport</code> in <code style="white-space: pre-wrap;">Administratie</code>:</p>
<ul>
<li><code style="white-space: pre-wrap;">AantalGebruikers</code> telt het aantal <code style="white-space: pre-wrap;">Gebruiker</code>'s.</li>
<li><code style="white-space: pre-wrap;">AlleGastenHebbenReservering</code> returnt of alle gasten tenminste 1 reservering hebben (gebruik <code style="white-space: pre-wrap;">Any</code> of <code style="white-space: pre-wrap;">All</code>).</li>
<li><code style="white-space: pre-wrap;">AantalSinds</code> telt het totaal aantal gasten sinds een gegeven datum. De opgave is iets moeilijker als <code style="white-space: pre-wrap;">uniek</code> de waarde <code style="white-space: pre-wrap;">true</code> heeft.</li>
<li><code style="white-space: pre-wrap;">GastBijEmail</code> returnt de <code style="white-space: pre-wrap;">Gast</code> met een gegeven email, of <code style="white-space: pre-wrap;">null</code> als de email niet voorkomt of niet uniek is.</li>
<li><code style="white-space: pre-wrap;">GastBijGeboorteDatum</code> 
geeft de gast met de gegeven geboortedatum. Als deze gast niet bestaat, 
of de geboortedatum is niet uniek identificerend, dan moet deze methode 
een exceptie opgooien.</li>
<li><code style="white-space: pre-wrap;">PercentageBejaarden</code> geeft het percentage bezoekers dat ouder is dan 80. Extra: doorloop de <code style="white-space: pre-wrap;">IEnumerable</code> niet meerdere keren (tip: gebruik <code style="white-space: pre-wrap;">Average</code>).</li>
<li><code style="white-space: pre-wrap;">HoogsteLeeftijd</code> geeft de leeftijd van de oudste bezoeker.</li>
<li><code style="white-space: pre-wrap;">Blut</code> filtert de gegeven <code style="white-space: pre-wrap;">IEnumerable&lt;Gast&gt;</code> op <code style="white-space: pre-wrap;">Gast</code>'en die geen <code style="white-space: pre-wrap;">Credits</code> meer over hebben.</li>
<li>In de methode&nbsp;<code style="white-space: pre-wrap;">Vrij</code>&nbsp;van&nbsp;<code style="white-space: pre-wrap;">Attractie</code>, wordt bepaald of er geen&nbsp;<code style="white-space: pre-wrap;">Reservering</code> is gepland op het gegeven tijdstip. Gebruik <a href="https://docs.microsoft.com/en-us/ef/core/querying/related-data/explicit#explicit-loading" target="_blank" rel="noopener" class="new-window" id="new-window6" data-original-title="opens in new window/tab" data-toggle="tooltip">explicit <span class="lastWord">loading</span></a>&nbsp;.&nbsp;</li>
<li style="padding-bottom: 0px;">In de methode&nbsp;<code style="white-space: pre-wrap;">OnderhoudBezig</code>&nbsp;in <code style="white-space: pre-wrap;">Attractie</code> wordt bepaald of alle onderhouden zijn afgelopen (dus niet&nbsp;<code style="white-space: pre-wrap;">Eindigt</code>). Je kunt ook constructor dependecy injection gebruiken om bij de <code style="white-space: pre-wrap;">DBContext</code> te komen, i.p.v. die als argument mee te geven.&nbsp;</li>
<li>De methode <code style="white-space: pre-wrap;">Boek</code> in <code style="white-space: pre-wrap;">DatabaseContext</code> checkt of de attractie vrij is gedurende het gegeven datumtijdsbereik, m.b.v. de methode <code style="white-space: pre-wrap;">Vrij</code> in <code style="white-space: pre-wrap;">Attractie</code>. Alleen als dat het geval is, dan wordt er een <code style="white-space: pre-wrap;">Reservering</code> aangemaakt, de <code style="white-space: pre-wrap;">Credits</code> van de <code style="white-space: pre-wrap;">Gast</code> met 1 verlaagd, en <code style="white-space: pre-wrap;">true</code> gereturnd. We kunnen hier geen <code style="white-space: pre-wrap;">lock</code> gebruiken om concurrency problemen te voorkomen, vanwege de await's. Zet <code style="white-space: pre-wrap;">public readonly SemaphoreSlim Semaphore = new SemaphoreSlim(1, 1);</code> in <code style="white-space: pre-wrap;">Attractie</code>, en programmeer de lock als volgt: <br><code style="white-space: pre-wrap;">await attractie.Semaphore.WaitAsync();
try { /* code met mogelijk await */ }
finally { attractie.Semaphore.Release(); }
</code> Gebruik ook een transaction (zie <a href="https://docs.microsoft.com/en-us/ef/core/saving/transactions" target="_blank" rel="noopener" class="new-window" id="new-window7" data-original-title="opens in new window/tab" data-toggle="tooltip"><span class="lastWord">hier</span></a>&nbsp;) om bij een database crash te voorkomen dat de credits zijn verlaagd, terwijl de <code style="white-space: pre-wrap;">Reservering</code> nog niet was aangemaakt. Je kunt ook een <em>stored procedure</em> aanroepen, maar dat is ingewikkelder.</li>
<li>Extra: definieer een <code style="white-space: pre-wrap;">int Capaciteit</code> in <code style="white-space: pre-wrap;">Attractie</code> en pas de <code style="white-space: pre-wrap;">Boek</code> methode aan, zodat het reserveren toegestaan is zolang er niet meer reserveringen zijn dan de capaciteit, op elk moment.</li>
<li><code style="white-space: pre-wrap;">VerdelingPerDag</code> geeft het gemiddeld aantal nieuwe bezoekers per dag van de week (gebruik <code style="white-space: pre-wrap;">DateTime.DayOfWeek</code>). Tupels en de methode <code style="white-space: pre-wrap;">DayOfWeek</code> kunnen niet vertaald worden naar SQL, dus roep eerst een <code style="white-space: pre-wrap;">ToList</code> aan.</li>
<li><code style="white-space: pre-wrap;">GastenMetActiviteit</code> zet de gegeven <code style="white-space: pre-wrap;">IEnumerable&lt;Gast&gt;</code> om in een lijst van <code style="white-space: pre-wrap;">(Gast, int)</code> tupels, waarvan de <code style="white-space: pre-wrap;">int</code> het aantal <code style="white-space: pre-wrap;">Reservering</code>'en voorstelt (= hoe actief de gast is).</li>
<li>Extra (moeilijker): <code style="white-space: pre-wrap;">FavorietCorrect</code> geeft het aantal <code style="white-space: pre-wrap;">Gast</code>'en waarvoor het aantal <code style="white-space: pre-wrap;">Reservering</code>'en voor zijn/haar favoriete <code style="white-space: pre-wrap;">Attractie</code> hoger is dan het aantal <code style="white-space: pre-wrap;">Reservering</code>'en bij alle andere <code style="white-space: pre-wrap;">Attractie</code>'s.</li>
</ul>
<p style="color: #000000;">Gebruik <a href="https://brightspace.hhs.nl//content/enforced/15831-H-SE-S3WPFW-21_2022_VT/startcode%20linqopdracht.txt?_&amp;d2lSessionVal=Ve5EAU0yKUoPPndyNeSc32443&amp;ou=15831" target="_blank" rel="noopener" class="new-window" id="new-window8" data-original-title="opens in new window/tab" data-toggle="tooltip">deze <span class="lastWord">startcode</span></a>&nbsp;.&nbsp;</p>
<p style="color: #000000;">Tips voor het gebruik van <code style="white-space: pre-wrap;">DateTime</code>:&nbsp;</p>
<ul>
<li>je kunt <code style="white-space: pre-wrap;">DateTime</code>'s vergelijken met de operatoren <code style="white-space: pre-wrap;">&gt;</code> en <code style="white-space: pre-wrap;">&lt;</code>,</li>
<li>je kunt <code style="white-space: pre-wrap;">DateTime</code>'s van elkaar aftrekken met de operator <code style="white-space: pre-wrap;">-</code>,</li>
<li>je mag de volgende benadering gebruiken: de leeftijd van iemand geboren in <code style="white-space: pre-wrap;">DateTime d</code>, is <code style="white-space: pre-wrap;">EF.Functions.DateDiffDay(d, DateTime.Now) / 365.25</code></li>
</ul>
</div>
<div class="col-12"><footer>
<p><img src="Blank%20Page_files/logo.svg" alt="logo" class="img-fluid" style="max-width: 100%; float: right;" data-d2l-editor-default-img-style="true"></p>
</footer></div>
</div>
</div>
<p>
<script src="Blank%20Page_files/jquery-3.4.1.min.js"></script>
<script src="Blank%20Page_files/popper.min.js"></script>
<script src="Blank%20Page_files/bootstrap.min.js">
            </script>
</p>
<!-- Template JavaScript -->
<p>
<script src="Blank%20Page_files/scripts.min.js"></script>
</p>
</body></html>