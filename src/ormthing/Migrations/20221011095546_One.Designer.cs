// <auto-generated />
using System;
using DBOpdracht;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ormthing.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20221011095546_One")]
    partial class One
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.9");

            modelBuilder.Entity("DBOpdracht.Attractie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Attracties", (string)null);
                });

            modelBuilder.Entity("DBOpdracht.GastInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("GuestInfo");
                });

            modelBuilder.Entity("DBOpdracht.Gebruiker", b =>
                {
                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.HasKey("Email");

                    b.ToTable("Gebruikers", (string)null);
                });

            modelBuilder.Entity("DBOpdracht.Onderhoud", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Onderhoud_taken", (string)null);
                });

            modelBuilder.Entity("DBOpdracht.Reservering", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("GastId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ReservedAttractionId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("gastEmail")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ReservedAttractionId");

                    b.HasIndex("gastEmail");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("DBOpdracht.Gast", b =>
                {
                    b.HasBaseType("DBOpdracht.Gebruiker");

                    b.Property<string>("BegeleiderEmail")
                        .HasColumnType("TEXT");

                    b.Property<int>("Credits")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("EersteBezoek")
                        .HasColumnType("TEXT");

                    b.Property<int?>("FavorieteAttractieId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GastinfoId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("GeboorteDatum")
                        .HasColumnType("TEXT");

                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.HasIndex("BegeleiderEmail")
                        .IsUnique();

                    b.HasIndex("FavorieteAttractieId");

                    b.HasIndex("GastinfoId")
                        .IsUnique();

                    b.ToTable("Gasten", (string)null);
                });

            modelBuilder.Entity("DBOpdracht.Medewerker", b =>
                {
                    b.HasBaseType("DBOpdracht.Gebruiker");

                    b.ToTable("Medewerkers", (string)null);
                });

            modelBuilder.Entity("DBOpdracht.GastInfo", b =>
                {
                    b.OwnsOne("DBOpdracht.Coordinate", "coordinate", b1 =>
                        {
                            b1.Property<int>("GastInfoId")
                                .HasColumnType("INTEGER");

                            b1.HasKey("GastInfoId");

                            b1.ToTable("GuestInfo");

                            b1.WithOwner()
                                .HasForeignKey("GastInfoId");
                        });

                    b.Navigation("coordinate");
                });

            modelBuilder.Entity("DBOpdracht.Onderhoud", b =>
                {
                    b.HasOne("DBOpdracht.Attractie", "Target")
                        .WithMany("OnderhoudPunten")
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Target");
                });

            modelBuilder.Entity("DBOpdracht.Reservering", b =>
                {
                    b.HasOne("DBOpdracht.Attractie", "ReservedAttraction")
                        .WithMany("Reserveringen")
                        .HasForeignKey("ReservedAttractionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DBOpdracht.Gast", "gast")
                        .WithMany("reserveringen")
                        .HasForeignKey("gastEmail")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("DBOpdracht.DateTimeBereik", "VindtPlaatsTijdens", b1 =>
                        {
                            b1.Property<int>("ReserveringId")
                                .HasColumnType("INTEGER");

                            b1.HasKey("ReserveringId");

                            b1.ToTable("Reservations");

                            b1.WithOwner()
                                .HasForeignKey("ReserveringId");
                        });

                    b.Navigation("ReservedAttraction");

                    b.Navigation("VindtPlaatsTijdens")
                        .IsRequired();

                    b.Navigation("gast");
                });

            modelBuilder.Entity("DBOpdracht.Gast", b =>
                {
                    b.HasOne("DBOpdracht.Gast", "Begeleider")
                        .WithOne("Begeleid")
                        .HasForeignKey("DBOpdracht.Gast", "BegeleiderEmail");

                    b.HasOne("DBOpdracht.Gebruiker", null)
                        .WithOne()
                        .HasForeignKey("DBOpdracht.Gast", "Email")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DBOpdracht.Attractie", "FavorieteAttractie")
                        .WithMany()
                        .HasForeignKey("FavorieteAttractieId");

                    b.HasOne("DBOpdracht.GastInfo", "GastInformatie")
                        .WithOne("Gast")
                        .HasForeignKey("DBOpdracht.Gast", "GastinfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Begeleider");

                    b.Navigation("FavorieteAttractie");

                    b.Navigation("GastInformatie");
                });

            modelBuilder.Entity("DBOpdracht.Medewerker", b =>
                {
                    b.HasOne("DBOpdracht.Gebruiker", null)
                        .WithOne()
                        .HasForeignKey("DBOpdracht.Medewerker", "Email")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DBOpdracht.Attractie", b =>
                {
                    b.Navigation("OnderhoudPunten");

                    b.Navigation("Reserveringen");
                });

            modelBuilder.Entity("DBOpdracht.GastInfo", b =>
                {
                    b.Navigation("Gast");
                });

            modelBuilder.Entity("DBOpdracht.Gast", b =>
                {
                    b.Navigation("Begeleid");

                    b.Navigation("reserveringen");
                });
#pragma warning restore 612, 618
        }
    }
}
